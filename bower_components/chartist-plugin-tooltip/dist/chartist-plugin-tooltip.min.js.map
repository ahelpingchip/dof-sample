{"version":3,"file":"chartist-plugin-tooltip.min.js","sources":["chartist-plugin-tooltip.js"],"names":["root","factory","define","amd","returnExportsGlobal","exports","module","this","window","document","Chartist","defaultOptions","currency","plugins","tooltip","options","extend","chart","tooltipSelector","Bar","Pie","$chart","$","container","$toolTip","append","find","hide","on","$point","tooltipText","attr","label","next","length","text","value","replace","html","show","event","css","left","offsetX","originalEvent","layerX","width","top","offsetY","layerY","height","tooltips"],"mappings":";;;;;;CAAC,SAAUA,EAAMC,GACO,kBAAXC,SAAyBA,OAAOC,IAEzCD,UAAW,WACT,MAAQF,GAAKI,oBAAsBH,MAET,gBAAZI,SAIhBC,OAAOD,QAAUJ,IAEjBD,EAAK,6BAA+BC,KAEtCM,KAAM,WAkFN,MA3EC,UAASC,EAAQC,EAAUC,GAC1B,YAEA,IAAIC,IACFC,SAAU,KAWZF,GAASG,QAAUH,EAASG,YAC5BH,EAASG,QAAQC,QAAU,SAASC,GAIlC,MAFAA,GAAUL,EAASM,UAAWL,EAAgBI,GAEvC,SAAiBE,GACtB,GAAIC,GAAkB,WAClBD,aAAiBP,GAASS,IAC5BD,EAAkB,UACTD,YAAiBP,GAASU,MACnCF,EAAkB,YAGpB,IAAIG,GAASC,EAAEL,EAAMM,WACjBC,EAAWH,EACdI,OAAO,+BACPC,KAAK,YACLC,MAEDN,GAAOO,GAAG,aAAcV,EAAiB,WACvC,GAAIW,GAASP,EAAEf,MACXuB,EAAc,EAElB,IAAID,EAAOE,KAAK,WACdD,GAAeD,EAAOE,KAAK,WAAa,WAIxC,IAAId,YAAiBP,GAASU,IAAK,CACjC,GAAIY,GAAQH,EAAOI,KAAK,YACpBD,GAAME,OAAS,IACjBJ,GAAeE,EAAMG,OAAS,QAKpC,GAAIC,GAAQP,EAAOE,KAAK,WACpBhB,GAAQH,WACVwB,EAAQrB,EAAQH,SAAWwB,EAAMC,QAAQ,+BAAgC,QAE3EP,GAAeM,EAEfZ,EAASc,KAAKR,GAAaS,SAG7BlB,EAAOO,GAAG,aAAcV,EAAiB,WACvCM,EAASG,SAGXN,EAAOO,GAAG,YAAa,SAASY,GAC9BhB,EAASiB,KACPC,MAAOF,EAAMG,SAAWH,EAAMI,cAAcC,QAAUrB,EAASsB,QAAU,EAAI,GAC7EC,KAAMP,EAAMQ,SAAWR,EAAMI,cAAcK,QAAUzB,EAAS0B,SAAW,UAMjF1C,OAAQC,SAAUC,UAEbA,SAASG,QAAQsC","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.returnExportsGlobal = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist.plugins.tooltips'] = factory();\n  }\n}(this, function () {\n\n  /**\n   * Chartist.js plugin to display a data label on top of the points in a line chart.\n   *\n   */\n  /* global Chartist */\n  (function(window, document, Chartist) {\n    'use strict';\n\n    var defaultOptions = {\n      currency: null\n      // showTooltips: true,\n      // tooltipEvents: ['mousemove', 'touchstart', 'touchmove'],\n      // labelClass: 'ct-label',\n      // labelOffset: {\n      //   x: 0,\n      //   y: -10\n      // },\n      // textAnchor: 'middle'\n    };\n\n    Chartist.plugins = Chartist.plugins || {};\n    Chartist.plugins.tooltip = function(options) {\n\n      options = Chartist.extend({}, defaultOptions, options);\n\n      return function tooltip(chart) {\n        var tooltipSelector = '.ct-point';\n        if (chart instanceof Chartist.Bar) {\n          tooltipSelector = '.ct-bar';\n        } else if (chart instanceof Chartist.Pie) {\n          tooltipSelector = '.ct-slice';\n        }\n\n        var $chart = $(chart.container);\n        var $toolTip = $chart\n        .append('<div class=\"tooltip\"></div>')\n        .find('.tooltip')\n        .hide();\n\n        $chart.on('mouseenter', tooltipSelector, function() {\n          var $point = $(this);\n          var tooltipText = '';\n\n          if ($point.attr('ct:meta')) {\n            tooltipText += $point.attr('ct:meta') + '<br>';\n          } else {\n            // For Pie Charts also take the labels into account\n            // Could add support for more charts here as well!\n            if (chart instanceof Chartist.Pie) {\n              var label = $point.next('.ct-label');\n              if (label.length > 0) {\n                tooltipText += label.text() + '<br>';\n              }\n            }\n          }\n\n          var value = $point.attr('ct:value');\n          if (options.currency) {\n            value = options.currency + value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\n          }\n          tooltipText += value;\n\n          $toolTip.html(tooltipText).show();\n        });\n\n        $chart.on('mouseleave', tooltipSelector, function() {\n          $toolTip.hide();\n        });\n\n        $chart.on('mousemove', function(event) {\n          $toolTip.css({\n            left: (event.offsetX || event.originalEvent.layerX) - $toolTip.width() / 2 - 10,\n            top: (event.offsetY || event.originalEvent.layerY) - $toolTip.height() - 40\n          });\n        });\n      }\n    };\n\n  }(window, document, Chartist));\n\n  return Chartist.plugins.tooltips;\n\n}));\n"]}